angular.module('app').factory('AuthService', ['$http', '$location', function($http, $location) {
  var authTokenKey = 'authToken';
  var userRoleKey = 'userRole';

  return {
    login: function(credentials) {
      return $http.post('/authenticate', credentials).then(function(response) {
        localStorage.setItem(authTokenKey, response.data.token);
        var payload = JSON.parse(atob(response.data.token.split('.')[1]));
        localStorage.setItem(userRoleKey, payload.scope);
        return response.data;
      });
    },

    logout: function() {
      localStorage.removeItem(authTokenKey);
      localStorage.removeItem(userRoleKey);
      $location.path('/login');
    },

    getToken: function() {
      return localStorage.getItem(authTokenKey);
    },

    getUserRole: function() {
      return localStorage.getItem(userRoleKey);
    },

    isAuthenticated: function() {
      return !!this.getToken();
    },

    hasRole: function(role) {
      return this.getUserRole() === role;
    }
  };
}]);angular.module('app').factory('AuthService', ['$http', '$location', function($http, $location) {
  var authTokenKey = 'authToken';
  var userRoleKey = 'userRole';

  return {
    login: function(credentials) {
      return $http.post('/authenticate', credentials).then(function(response) {
        localStorage.setItem(authTokenKey, response.data.token);
        var payload = JSON.parse(atob(response.data.token.split('.')[1]));
        localStorage.setItem(userRoleKey, payload.scope);
        return response.data;
      });
    },

    logout: function() {
      localStorage.removeItem(authTokenKey);
      localStorage.removeItem(userRoleKey);
      $location.path('/login');
    },

    getToken: function() {
      return localStorage.getItem(authTokenKey);
    },

    getUserRole: function() {
      return localStorage.getItem(userRoleKey);
    },

    isAuthenticated: function() {
      return !!this.getToken();
    },

    hasRole: function(role) {
      return this.getUserRole() === role;
    }
  };
}]);